"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Product = void 0;
class Product {
    constructor(title, amount, type, price) {
        this._reviews = [];
        this._score = 0;
        this.title = title;
        this.amount = amount;
        this.type = type;
        this.price = price;
    }
    ;
    // set type(type) {
    //     this._type = type;
    // };
    get score() {
        return this._score;
    }
    ;
    get reviews() {
        return this._reviews;
    }
    ;
    // get type() {
    //     return this._type;
    // };
    getPrice() {
        return this.price;
    }
    ;
    canBuy() {
        return typeof this.price === "number";
    }
    ;
    getAmount() {
        return this.amount;
    }
    ;
    addReview(reiew) {
        this._reviews.push(reiew);
        this._score = this._reviews.reduce((acc, review) => {
            return acc + review.score;
        }, 0) / this._reviews.length;
    }
    ;
    static getInfo(product) {
        console.log(product.title, product.amount);
    }
}
exports.Product = Product;
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvZHVjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lbnRpdGllcy9Qcm9kdWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUtBLE1BQWEsT0FBTztJQVVoQixZQUFZLEtBQWEsRUFBRSxNQUFjLEVBQUUsSUFBTyxFQUFFLEtBQWM7UUFIMUQsYUFBUSxHQUFhLEVBQUUsQ0FBQztRQUN4QixXQUFNLEdBQVcsQ0FBQyxDQUFDO1FBR3ZCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ3ZCLENBQUM7SUFBQSxDQUFDO0lBRUYsbUJBQW1CO0lBQ25CLHlCQUF5QjtJQUN6QixLQUFLO0lBQ0wsSUFBSSxLQUFLO1FBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxPQUFPO1FBQ1AsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7SUFBQSxDQUFDO0lBQ0YsZUFBZTtJQUNmLHlCQUF5QjtJQUN6QixLQUFLO0lBRUwsUUFBUTtRQUNKLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN0QixDQUFDO0lBQUEsQ0FBQztJQUNGLE1BQU07UUFDRixPQUFPLE9BQU8sSUFBSSxDQUFDLEtBQUssS0FBSyxRQUFRLENBQUM7SUFDMUMsQ0FBQztJQUFBLENBQUM7SUFDRixTQUFTO1FBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7SUFBQSxDQUFDO0lBQ0YsU0FBUyxDQUFDLEtBQWE7UUFDbkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDMUIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBUyxDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsRUFBRTtZQUN2RCxPQUFPLEdBQUcsR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO1FBQzlCLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQztJQUNqQyxDQUFDO0lBQUEsQ0FBQztJQUVGLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBZ0I7UUFDM0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMvQyxDQUFDO0NBZUo7QUEvREQsMEJBK0RDO0FBQUEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvb2sgfSBmcm9tIFwiLi9Cb29rXCI7XHJcbmltcG9ydCB7IE5vdGVwYWQgfSBmcm9tIFwiLi9Ob3RlcGFkXCI7XHJcbmltcG9ydCB7IElQcm9kdWN0IH0gZnJvbSBcIi4uL3R5cGVzL1Byb2R1Y3RcIjtcclxuaW1wb3J0IHsgUmV2aWV3IH0gZnJvbSBcIi4uL3R5cGVzL1Jldmlld1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFByb2R1Y3Q8VCA9IGFueT4ge1xyXG4gICAgcHVibGljIHRpdGxlOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgYW1vdW50OiBudW1iZXI7ICAgIFxyXG5cclxuICAgIHByb3RlY3RlZCBwcmljZT86IG51bWJlcjtcclxuICAgIHByb3RlY3RlZCB0eXBlOiBUOyAvLyBMZXNzb24gNVxyXG5cclxuICAgIHByaXZhdGUgX3Jldmlld3M6IFJldmlld1tdID0gW107XHJcbiAgICBwcml2YXRlIF9zY29yZTogbnVtYmVyID0gMDtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcih0aXRsZTogc3RyaW5nLCBhbW91bnQ6IG51bWJlciwgdHlwZTogVCwgcHJpY2U/OiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLnRpdGxlID0gdGl0bGU7XHJcbiAgICAgICAgdGhpcy5hbW91bnQgPSBhbW91bnQ7XHJcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcclxuICAgICAgICB0aGlzLnByaWNlID0gcHJpY2U7XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIHNldCB0eXBlKHR5cGUpIHtcclxuICAgIC8vICAgICB0aGlzLl90eXBlID0gdHlwZTtcclxuICAgIC8vIH07XHJcbiAgICBnZXQgc2NvcmUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Njb3JlO1xyXG4gICAgfTtcclxuICAgIGdldCByZXZpZXdzKCk6IFJlYWRvbmx5PFJldmlld1tdPiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Jldmlld3M7XHJcbiAgICB9O1xyXG4gICAgLy8gZ2V0IHR5cGUoKSB7XHJcbiAgICAvLyAgICAgcmV0dXJuIHRoaXMuX3R5cGU7XHJcbiAgICAvLyB9O1xyXG5cclxuICAgIGdldFByaWNlKCk6IG51bWJlciB8IHVuZGVmaW5lZCB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpY2U7XHJcbiAgICB9O1xyXG4gICAgY2FuQnV5KCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0eXBlb2YgdGhpcy5wcmljZSA9PT0gXCJudW1iZXJcIjtcclxuICAgIH07XHJcbiAgICBnZXRBbW91bnQoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5hbW91bnQ7XHJcbiAgICB9O1xyXG4gICAgYWRkUmV2aWV3KHJlaWV3OiBSZXZpZXcpIHtcclxuICAgICAgICB0aGlzLl9yZXZpZXdzLnB1c2gocmVpZXcpO1xyXG4gICAgICAgIHRoaXMuX3Njb3JlID0gdGhpcy5fcmV2aWV3cy5yZWR1Y2U8bnVtYmVyPigoYWNjLCByZXZpZXcpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIGFjYyArIHJldmlldy5zY29yZTtcclxuICAgICAgICB9LCAwKSAvIHRoaXMuX3Jldmlld3MubGVuZ3RoO1xyXG4gICAgfTtcclxuXHJcbiAgICBzdGF0aWMgZ2V0SW5mbyhwcm9kdWN0OiBQcm9kdWN0KSB7XHJcbiAgICAgICAgY29uc29sZS5sb2cocHJvZHVjdC50aXRsZSwgcHJvZHVjdC5hbW91bnQpOyAgICAgICAgXHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8vIGdldFByaWNlUHJvZHVjdChlbnRpdHk6IEJvb2sgfCBOb3RlcGFkKTogc3RyaW5nIHtcclxuICAgIC8vICAgICByZXR1cm4gZW50aXR5LnByaWNlID8gZW50aXR5LnByaWNlLnRvU3RyaW5nKCkgOiBcItC90LUg0L/RgNC+0LTQsNC10YLRgdGPXCI7XHJcbiAgICAvLyB9O1xyXG4gICAgLy8gc2hvd0RhdGEoZW50aXR5OiB1bmtub3duKTogdm9pZCB7XHJcbiAgICAvLyAgICAgaWYoZW50aXR5IGluc3RhbmNlb2YgQm9vaykge1xyXG4gICAgLy8gICAgICAgICBjb25zb2xlLmxvZyhg0JrQvdC40LPQsCAtICR7ZW50aXR5LnRpdGxlfSAtICR7ZW50aXR5LmF1dGhvcn0gLSAke3RoaXMuZ2V0UHJpY2VQcm9kdWN0KGVudGl0eSl9YClcclxuICAgIC8vICAgICB9IGVsc2UgaWYgKGVudGl0eSBpbnN0YW5jZW9mIE5vdGVwYWQpIHtcclxuICAgIC8vICAgICAgIGNvbnNvbGUubG9nKGDQkdC70L7QutC90L7RgiAtICR7dGhpcy5nZXRQcmljZVByb2R1Y3QoZW50aXR5KX1gKSAgXHJcbiAgICAvLyAgICAgfSAgICBcclxuICAgIC8vIH07XHJcbiAgICBcclxuXHJcbn07Il19